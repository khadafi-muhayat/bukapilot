#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_5866002633423505928) {
   out_5866002633423505928[0] = 0;
   out_5866002633423505928[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_5866002633423505928[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_5866002633423505928[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_5866002633423505928[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_5866002633423505928[5] = -sin(in_vec[1]);
   out_5866002633423505928[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5866002633423505928[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5866002633423505928[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_5866002633423505928[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_5866002633423505928[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_5866002633423505928[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_5866002633423505928[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5866002633423505928[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5866002633423505928[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_5866002633423505928[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_5866002633423505928[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_5866002633423505928[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_8354761777587577496) {
   out_8354761777587577496[0] = delta_x[0] + nom_x[0];
   out_8354761777587577496[1] = delta_x[1] + nom_x[1];
   out_8354761777587577496[2] = delta_x[2] + nom_x[2];
   out_8354761777587577496[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_8354761777587577496[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_8354761777587577496[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_8354761777587577496[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_8354761777587577496[7] = delta_x[6] + nom_x[7];
   out_8354761777587577496[8] = delta_x[7] + nom_x[8];
   out_8354761777587577496[9] = delta_x[8] + nom_x[9];
   out_8354761777587577496[10] = delta_x[9] + nom_x[10];
   out_8354761777587577496[11] = delta_x[10] + nom_x[11];
   out_8354761777587577496[12] = delta_x[11] + nom_x[12];
   out_8354761777587577496[13] = delta_x[12] + nom_x[13];
   out_8354761777587577496[14] = delta_x[13] + nom_x[14];
   out_8354761777587577496[15] = delta_x[14] + nom_x[15];
   out_8354761777587577496[16] = delta_x[15] + nom_x[16];
   out_8354761777587577496[17] = delta_x[16] + nom_x[17];
   out_8354761777587577496[18] = delta_x[17] + nom_x[18];
   out_8354761777587577496[19] = delta_x[18] + nom_x[19];
   out_8354761777587577496[20] = delta_x[19] + nom_x[20];
   out_8354761777587577496[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_8317700417448784408) {
   out_8317700417448784408[0] = -nom_x[0] + true_x[0];
   out_8317700417448784408[1] = -nom_x[1] + true_x[1];
   out_8317700417448784408[2] = -nom_x[2] + true_x[2];
   out_8317700417448784408[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_8317700417448784408[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_8317700417448784408[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_8317700417448784408[6] = -nom_x[7] + true_x[7];
   out_8317700417448784408[7] = -nom_x[8] + true_x[8];
   out_8317700417448784408[8] = -nom_x[9] + true_x[9];
   out_8317700417448784408[9] = -nom_x[10] + true_x[10];
   out_8317700417448784408[10] = -nom_x[11] + true_x[11];
   out_8317700417448784408[11] = -nom_x[12] + true_x[12];
   out_8317700417448784408[12] = -nom_x[13] + true_x[13];
   out_8317700417448784408[13] = -nom_x[14] + true_x[14];
   out_8317700417448784408[14] = -nom_x[15] + true_x[15];
   out_8317700417448784408[15] = -nom_x[16] + true_x[16];
   out_8317700417448784408[16] = -nom_x[17] + true_x[17];
   out_8317700417448784408[17] = -nom_x[18] + true_x[18];
   out_8317700417448784408[18] = -nom_x[19] + true_x[19];
   out_8317700417448784408[19] = -nom_x[20] + true_x[20];
   out_8317700417448784408[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_4964267863056697179) {
   out_4964267863056697179[0] = 1.0;
   out_4964267863056697179[1] = 0;
   out_4964267863056697179[2] = 0;
   out_4964267863056697179[3] = 0;
   out_4964267863056697179[4] = 0;
   out_4964267863056697179[5] = 0;
   out_4964267863056697179[6] = 0;
   out_4964267863056697179[7] = 0;
   out_4964267863056697179[8] = 0;
   out_4964267863056697179[9] = 0;
   out_4964267863056697179[10] = 0;
   out_4964267863056697179[11] = 0;
   out_4964267863056697179[12] = 0;
   out_4964267863056697179[13] = 0;
   out_4964267863056697179[14] = 0;
   out_4964267863056697179[15] = 0;
   out_4964267863056697179[16] = 0;
   out_4964267863056697179[17] = 0;
   out_4964267863056697179[18] = 0;
   out_4964267863056697179[19] = 0;
   out_4964267863056697179[20] = 0;
   out_4964267863056697179[21] = 0;
   out_4964267863056697179[22] = 1.0;
   out_4964267863056697179[23] = 0;
   out_4964267863056697179[24] = 0;
   out_4964267863056697179[25] = 0;
   out_4964267863056697179[26] = 0;
   out_4964267863056697179[27] = 0;
   out_4964267863056697179[28] = 0;
   out_4964267863056697179[29] = 0;
   out_4964267863056697179[30] = 0;
   out_4964267863056697179[31] = 0;
   out_4964267863056697179[32] = 0;
   out_4964267863056697179[33] = 0;
   out_4964267863056697179[34] = 0;
   out_4964267863056697179[35] = 0;
   out_4964267863056697179[36] = 0;
   out_4964267863056697179[37] = 0;
   out_4964267863056697179[38] = 0;
   out_4964267863056697179[39] = 0;
   out_4964267863056697179[40] = 0;
   out_4964267863056697179[41] = 0;
   out_4964267863056697179[42] = 0;
   out_4964267863056697179[43] = 0;
   out_4964267863056697179[44] = 1.0;
   out_4964267863056697179[45] = 0;
   out_4964267863056697179[46] = 0;
   out_4964267863056697179[47] = 0;
   out_4964267863056697179[48] = 0;
   out_4964267863056697179[49] = 0;
   out_4964267863056697179[50] = 0;
   out_4964267863056697179[51] = 0;
   out_4964267863056697179[52] = 0;
   out_4964267863056697179[53] = 0;
   out_4964267863056697179[54] = 0;
   out_4964267863056697179[55] = 0;
   out_4964267863056697179[56] = 0;
   out_4964267863056697179[57] = 0;
   out_4964267863056697179[58] = 0;
   out_4964267863056697179[59] = 0;
   out_4964267863056697179[60] = 0;
   out_4964267863056697179[61] = 0;
   out_4964267863056697179[62] = 0;
   out_4964267863056697179[63] = 0;
   out_4964267863056697179[64] = 0;
   out_4964267863056697179[65] = 0;
   out_4964267863056697179[66] = -0.5*state[4];
   out_4964267863056697179[67] = -0.5*state[5];
   out_4964267863056697179[68] = -0.5*state[6];
   out_4964267863056697179[69] = 0;
   out_4964267863056697179[70] = 0;
   out_4964267863056697179[71] = 0;
   out_4964267863056697179[72] = 0;
   out_4964267863056697179[73] = 0;
   out_4964267863056697179[74] = 0;
   out_4964267863056697179[75] = 0;
   out_4964267863056697179[76] = 0;
   out_4964267863056697179[77] = 0;
   out_4964267863056697179[78] = 0;
   out_4964267863056697179[79] = 0;
   out_4964267863056697179[80] = 0;
   out_4964267863056697179[81] = 0;
   out_4964267863056697179[82] = 0;
   out_4964267863056697179[83] = 0;
   out_4964267863056697179[84] = 0;
   out_4964267863056697179[85] = 0;
   out_4964267863056697179[86] = 0;
   out_4964267863056697179[87] = 0.5*state[3];
   out_4964267863056697179[88] = 0.5*state[6];
   out_4964267863056697179[89] = -0.5*state[5];
   out_4964267863056697179[90] = 0;
   out_4964267863056697179[91] = 0;
   out_4964267863056697179[92] = 0;
   out_4964267863056697179[93] = 0;
   out_4964267863056697179[94] = 0;
   out_4964267863056697179[95] = 0;
   out_4964267863056697179[96] = 0;
   out_4964267863056697179[97] = 0;
   out_4964267863056697179[98] = 0;
   out_4964267863056697179[99] = 0;
   out_4964267863056697179[100] = 0;
   out_4964267863056697179[101] = 0;
   out_4964267863056697179[102] = 0;
   out_4964267863056697179[103] = 0;
   out_4964267863056697179[104] = 0;
   out_4964267863056697179[105] = 0;
   out_4964267863056697179[106] = 0;
   out_4964267863056697179[107] = 0;
   out_4964267863056697179[108] = -0.5*state[6];
   out_4964267863056697179[109] = 0.5*state[3];
   out_4964267863056697179[110] = 0.5*state[4];
   out_4964267863056697179[111] = 0;
   out_4964267863056697179[112] = 0;
   out_4964267863056697179[113] = 0;
   out_4964267863056697179[114] = 0;
   out_4964267863056697179[115] = 0;
   out_4964267863056697179[116] = 0;
   out_4964267863056697179[117] = 0;
   out_4964267863056697179[118] = 0;
   out_4964267863056697179[119] = 0;
   out_4964267863056697179[120] = 0;
   out_4964267863056697179[121] = 0;
   out_4964267863056697179[122] = 0;
   out_4964267863056697179[123] = 0;
   out_4964267863056697179[124] = 0;
   out_4964267863056697179[125] = 0;
   out_4964267863056697179[126] = 0;
   out_4964267863056697179[127] = 0;
   out_4964267863056697179[128] = 0;
   out_4964267863056697179[129] = 0.5*state[5];
   out_4964267863056697179[130] = -0.5*state[4];
   out_4964267863056697179[131] = 0.5*state[3];
   out_4964267863056697179[132] = 0;
   out_4964267863056697179[133] = 0;
   out_4964267863056697179[134] = 0;
   out_4964267863056697179[135] = 0;
   out_4964267863056697179[136] = 0;
   out_4964267863056697179[137] = 0;
   out_4964267863056697179[138] = 0;
   out_4964267863056697179[139] = 0;
   out_4964267863056697179[140] = 0;
   out_4964267863056697179[141] = 0;
   out_4964267863056697179[142] = 0;
   out_4964267863056697179[143] = 0;
   out_4964267863056697179[144] = 0;
   out_4964267863056697179[145] = 0;
   out_4964267863056697179[146] = 0;
   out_4964267863056697179[147] = 0;
   out_4964267863056697179[148] = 0;
   out_4964267863056697179[149] = 0;
   out_4964267863056697179[150] = 0;
   out_4964267863056697179[151] = 0;
   out_4964267863056697179[152] = 0;
   out_4964267863056697179[153] = 1.0;
   out_4964267863056697179[154] = 0;
   out_4964267863056697179[155] = 0;
   out_4964267863056697179[156] = 0;
   out_4964267863056697179[157] = 0;
   out_4964267863056697179[158] = 0;
   out_4964267863056697179[159] = 0;
   out_4964267863056697179[160] = 0;
   out_4964267863056697179[161] = 0;
   out_4964267863056697179[162] = 0;
   out_4964267863056697179[163] = 0;
   out_4964267863056697179[164] = 0;
   out_4964267863056697179[165] = 0;
   out_4964267863056697179[166] = 0;
   out_4964267863056697179[167] = 0;
   out_4964267863056697179[168] = 0;
   out_4964267863056697179[169] = 0;
   out_4964267863056697179[170] = 0;
   out_4964267863056697179[171] = 0;
   out_4964267863056697179[172] = 0;
   out_4964267863056697179[173] = 0;
   out_4964267863056697179[174] = 0;
   out_4964267863056697179[175] = 1.0;
   out_4964267863056697179[176] = 0;
   out_4964267863056697179[177] = 0;
   out_4964267863056697179[178] = 0;
   out_4964267863056697179[179] = 0;
   out_4964267863056697179[180] = 0;
   out_4964267863056697179[181] = 0;
   out_4964267863056697179[182] = 0;
   out_4964267863056697179[183] = 0;
   out_4964267863056697179[184] = 0;
   out_4964267863056697179[185] = 0;
   out_4964267863056697179[186] = 0;
   out_4964267863056697179[187] = 0;
   out_4964267863056697179[188] = 0;
   out_4964267863056697179[189] = 0;
   out_4964267863056697179[190] = 0;
   out_4964267863056697179[191] = 0;
   out_4964267863056697179[192] = 0;
   out_4964267863056697179[193] = 0;
   out_4964267863056697179[194] = 0;
   out_4964267863056697179[195] = 0;
   out_4964267863056697179[196] = 0;
   out_4964267863056697179[197] = 1.0;
   out_4964267863056697179[198] = 0;
   out_4964267863056697179[199] = 0;
   out_4964267863056697179[200] = 0;
   out_4964267863056697179[201] = 0;
   out_4964267863056697179[202] = 0;
   out_4964267863056697179[203] = 0;
   out_4964267863056697179[204] = 0;
   out_4964267863056697179[205] = 0;
   out_4964267863056697179[206] = 0;
   out_4964267863056697179[207] = 0;
   out_4964267863056697179[208] = 0;
   out_4964267863056697179[209] = 0;
   out_4964267863056697179[210] = 0;
   out_4964267863056697179[211] = 0;
   out_4964267863056697179[212] = 0;
   out_4964267863056697179[213] = 0;
   out_4964267863056697179[214] = 0;
   out_4964267863056697179[215] = 0;
   out_4964267863056697179[216] = 0;
   out_4964267863056697179[217] = 0;
   out_4964267863056697179[218] = 0;
   out_4964267863056697179[219] = 1.0;
   out_4964267863056697179[220] = 0;
   out_4964267863056697179[221] = 0;
   out_4964267863056697179[222] = 0;
   out_4964267863056697179[223] = 0;
   out_4964267863056697179[224] = 0;
   out_4964267863056697179[225] = 0;
   out_4964267863056697179[226] = 0;
   out_4964267863056697179[227] = 0;
   out_4964267863056697179[228] = 0;
   out_4964267863056697179[229] = 0;
   out_4964267863056697179[230] = 0;
   out_4964267863056697179[231] = 0;
   out_4964267863056697179[232] = 0;
   out_4964267863056697179[233] = 0;
   out_4964267863056697179[234] = 0;
   out_4964267863056697179[235] = 0;
   out_4964267863056697179[236] = 0;
   out_4964267863056697179[237] = 0;
   out_4964267863056697179[238] = 0;
   out_4964267863056697179[239] = 0;
   out_4964267863056697179[240] = 0;
   out_4964267863056697179[241] = 1.0;
   out_4964267863056697179[242] = 0;
   out_4964267863056697179[243] = 0;
   out_4964267863056697179[244] = 0;
   out_4964267863056697179[245] = 0;
   out_4964267863056697179[246] = 0;
   out_4964267863056697179[247] = 0;
   out_4964267863056697179[248] = 0;
   out_4964267863056697179[249] = 0;
   out_4964267863056697179[250] = 0;
   out_4964267863056697179[251] = 0;
   out_4964267863056697179[252] = 0;
   out_4964267863056697179[253] = 0;
   out_4964267863056697179[254] = 0;
   out_4964267863056697179[255] = 0;
   out_4964267863056697179[256] = 0;
   out_4964267863056697179[257] = 0;
   out_4964267863056697179[258] = 0;
   out_4964267863056697179[259] = 0;
   out_4964267863056697179[260] = 0;
   out_4964267863056697179[261] = 0;
   out_4964267863056697179[262] = 0;
   out_4964267863056697179[263] = 1.0;
   out_4964267863056697179[264] = 0;
   out_4964267863056697179[265] = 0;
   out_4964267863056697179[266] = 0;
   out_4964267863056697179[267] = 0;
   out_4964267863056697179[268] = 0;
   out_4964267863056697179[269] = 0;
   out_4964267863056697179[270] = 0;
   out_4964267863056697179[271] = 0;
   out_4964267863056697179[272] = 0;
   out_4964267863056697179[273] = 0;
   out_4964267863056697179[274] = 0;
   out_4964267863056697179[275] = 0;
   out_4964267863056697179[276] = 0;
   out_4964267863056697179[277] = 0;
   out_4964267863056697179[278] = 0;
   out_4964267863056697179[279] = 0;
   out_4964267863056697179[280] = 0;
   out_4964267863056697179[281] = 0;
   out_4964267863056697179[282] = 0;
   out_4964267863056697179[283] = 0;
   out_4964267863056697179[284] = 0;
   out_4964267863056697179[285] = 1.0;
   out_4964267863056697179[286] = 0;
   out_4964267863056697179[287] = 0;
   out_4964267863056697179[288] = 0;
   out_4964267863056697179[289] = 0;
   out_4964267863056697179[290] = 0;
   out_4964267863056697179[291] = 0;
   out_4964267863056697179[292] = 0;
   out_4964267863056697179[293] = 0;
   out_4964267863056697179[294] = 0;
   out_4964267863056697179[295] = 0;
   out_4964267863056697179[296] = 0;
   out_4964267863056697179[297] = 0;
   out_4964267863056697179[298] = 0;
   out_4964267863056697179[299] = 0;
   out_4964267863056697179[300] = 0;
   out_4964267863056697179[301] = 0;
   out_4964267863056697179[302] = 0;
   out_4964267863056697179[303] = 0;
   out_4964267863056697179[304] = 0;
   out_4964267863056697179[305] = 0;
   out_4964267863056697179[306] = 0;
   out_4964267863056697179[307] = 1.0;
   out_4964267863056697179[308] = 0;
   out_4964267863056697179[309] = 0;
   out_4964267863056697179[310] = 0;
   out_4964267863056697179[311] = 0;
   out_4964267863056697179[312] = 0;
   out_4964267863056697179[313] = 0;
   out_4964267863056697179[314] = 0;
   out_4964267863056697179[315] = 0;
   out_4964267863056697179[316] = 0;
   out_4964267863056697179[317] = 0;
   out_4964267863056697179[318] = 0;
   out_4964267863056697179[319] = 0;
   out_4964267863056697179[320] = 0;
   out_4964267863056697179[321] = 0;
   out_4964267863056697179[322] = 0;
   out_4964267863056697179[323] = 0;
   out_4964267863056697179[324] = 0;
   out_4964267863056697179[325] = 0;
   out_4964267863056697179[326] = 0;
   out_4964267863056697179[327] = 0;
   out_4964267863056697179[328] = 0;
   out_4964267863056697179[329] = 1.0;
   out_4964267863056697179[330] = 0;
   out_4964267863056697179[331] = 0;
   out_4964267863056697179[332] = 0;
   out_4964267863056697179[333] = 0;
   out_4964267863056697179[334] = 0;
   out_4964267863056697179[335] = 0;
   out_4964267863056697179[336] = 0;
   out_4964267863056697179[337] = 0;
   out_4964267863056697179[338] = 0;
   out_4964267863056697179[339] = 0;
   out_4964267863056697179[340] = 0;
   out_4964267863056697179[341] = 0;
   out_4964267863056697179[342] = 0;
   out_4964267863056697179[343] = 0;
   out_4964267863056697179[344] = 0;
   out_4964267863056697179[345] = 0;
   out_4964267863056697179[346] = 0;
   out_4964267863056697179[347] = 0;
   out_4964267863056697179[348] = 0;
   out_4964267863056697179[349] = 0;
   out_4964267863056697179[350] = 0;
   out_4964267863056697179[351] = 1.0;
   out_4964267863056697179[352] = 0;
   out_4964267863056697179[353] = 0;
   out_4964267863056697179[354] = 0;
   out_4964267863056697179[355] = 0;
   out_4964267863056697179[356] = 0;
   out_4964267863056697179[357] = 0;
   out_4964267863056697179[358] = 0;
   out_4964267863056697179[359] = 0;
   out_4964267863056697179[360] = 0;
   out_4964267863056697179[361] = 0;
   out_4964267863056697179[362] = 0;
   out_4964267863056697179[363] = 0;
   out_4964267863056697179[364] = 0;
   out_4964267863056697179[365] = 0;
   out_4964267863056697179[366] = 0;
   out_4964267863056697179[367] = 0;
   out_4964267863056697179[368] = 0;
   out_4964267863056697179[369] = 0;
   out_4964267863056697179[370] = 0;
   out_4964267863056697179[371] = 0;
   out_4964267863056697179[372] = 0;
   out_4964267863056697179[373] = 1.0;
   out_4964267863056697179[374] = 0;
   out_4964267863056697179[375] = 0;
   out_4964267863056697179[376] = 0;
   out_4964267863056697179[377] = 0;
   out_4964267863056697179[378] = 0;
   out_4964267863056697179[379] = 0;
   out_4964267863056697179[380] = 0;
   out_4964267863056697179[381] = 0;
   out_4964267863056697179[382] = 0;
   out_4964267863056697179[383] = 0;
   out_4964267863056697179[384] = 0;
   out_4964267863056697179[385] = 0;
   out_4964267863056697179[386] = 0;
   out_4964267863056697179[387] = 0;
   out_4964267863056697179[388] = 0;
   out_4964267863056697179[389] = 0;
   out_4964267863056697179[390] = 0;
   out_4964267863056697179[391] = 0;
   out_4964267863056697179[392] = 0;
   out_4964267863056697179[393] = 0;
   out_4964267863056697179[394] = 0;
   out_4964267863056697179[395] = 1.0;
   out_4964267863056697179[396] = 0;
   out_4964267863056697179[397] = 0;
   out_4964267863056697179[398] = 0;
   out_4964267863056697179[399] = 0;
   out_4964267863056697179[400] = 0;
   out_4964267863056697179[401] = 0;
   out_4964267863056697179[402] = 0;
   out_4964267863056697179[403] = 0;
   out_4964267863056697179[404] = 0;
   out_4964267863056697179[405] = 0;
   out_4964267863056697179[406] = 0;
   out_4964267863056697179[407] = 0;
   out_4964267863056697179[408] = 0;
   out_4964267863056697179[409] = 0;
   out_4964267863056697179[410] = 0;
   out_4964267863056697179[411] = 0;
   out_4964267863056697179[412] = 0;
   out_4964267863056697179[413] = 0;
   out_4964267863056697179[414] = 0;
   out_4964267863056697179[415] = 0;
   out_4964267863056697179[416] = 0;
   out_4964267863056697179[417] = 1.0;
   out_4964267863056697179[418] = 0;
   out_4964267863056697179[419] = 0;
   out_4964267863056697179[420] = 0;
   out_4964267863056697179[421] = 0;
   out_4964267863056697179[422] = 0;
   out_4964267863056697179[423] = 0;
   out_4964267863056697179[424] = 0;
   out_4964267863056697179[425] = 0;
   out_4964267863056697179[426] = 0;
   out_4964267863056697179[427] = 0;
   out_4964267863056697179[428] = 0;
   out_4964267863056697179[429] = 0;
   out_4964267863056697179[430] = 0;
   out_4964267863056697179[431] = 0;
   out_4964267863056697179[432] = 0;
   out_4964267863056697179[433] = 0;
   out_4964267863056697179[434] = 0;
   out_4964267863056697179[435] = 0;
   out_4964267863056697179[436] = 0;
   out_4964267863056697179[437] = 0;
   out_4964267863056697179[438] = 0;
   out_4964267863056697179[439] = 1.0;
   out_4964267863056697179[440] = 0;
   out_4964267863056697179[441] = 0;
   out_4964267863056697179[442] = 0;
   out_4964267863056697179[443] = 0;
   out_4964267863056697179[444] = 0;
   out_4964267863056697179[445] = 0;
   out_4964267863056697179[446] = 0;
   out_4964267863056697179[447] = 0;
   out_4964267863056697179[448] = 0;
   out_4964267863056697179[449] = 0;
   out_4964267863056697179[450] = 0;
   out_4964267863056697179[451] = 0;
   out_4964267863056697179[452] = 0;
   out_4964267863056697179[453] = 0;
   out_4964267863056697179[454] = 0;
   out_4964267863056697179[455] = 0;
   out_4964267863056697179[456] = 0;
   out_4964267863056697179[457] = 0;
   out_4964267863056697179[458] = 0;
   out_4964267863056697179[459] = 0;
   out_4964267863056697179[460] = 0;
   out_4964267863056697179[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_1405658321643130987) {
   out_1405658321643130987[0] = dt*state[7] + state[0];
   out_1405658321643130987[1] = dt*state[8] + state[1];
   out_1405658321643130987[2] = dt*state[9] + state[2];
   out_1405658321643130987[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_1405658321643130987[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_1405658321643130987[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_1405658321643130987[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_1405658321643130987[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_1405658321643130987[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_1405658321643130987[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_1405658321643130987[10] = state[10];
   out_1405658321643130987[11] = state[11];
   out_1405658321643130987[12] = state[12];
   out_1405658321643130987[13] = state[13];
   out_1405658321643130987[14] = state[14];
   out_1405658321643130987[15] = state[15];
   out_1405658321643130987[16] = state[16];
   out_1405658321643130987[17] = state[17];
   out_1405658321643130987[18] = state[18];
   out_1405658321643130987[19] = state[19];
   out_1405658321643130987[20] = state[20];
   out_1405658321643130987[21] = state[21];
}
void F_fun(double *state, double dt, double *out_6609914163391936085) {
   out_6609914163391936085[0] = 1;
   out_6609914163391936085[1] = 0;
   out_6609914163391936085[2] = 0;
   out_6609914163391936085[3] = 0;
   out_6609914163391936085[4] = 0;
   out_6609914163391936085[5] = 0;
   out_6609914163391936085[6] = dt;
   out_6609914163391936085[7] = 0;
   out_6609914163391936085[8] = 0;
   out_6609914163391936085[9] = 0;
   out_6609914163391936085[10] = 0;
   out_6609914163391936085[11] = 0;
   out_6609914163391936085[12] = 0;
   out_6609914163391936085[13] = 0;
   out_6609914163391936085[14] = 0;
   out_6609914163391936085[15] = 0;
   out_6609914163391936085[16] = 0;
   out_6609914163391936085[17] = 0;
   out_6609914163391936085[18] = 0;
   out_6609914163391936085[19] = 0;
   out_6609914163391936085[20] = 0;
   out_6609914163391936085[21] = 0;
   out_6609914163391936085[22] = 1;
   out_6609914163391936085[23] = 0;
   out_6609914163391936085[24] = 0;
   out_6609914163391936085[25] = 0;
   out_6609914163391936085[26] = 0;
   out_6609914163391936085[27] = 0;
   out_6609914163391936085[28] = dt;
   out_6609914163391936085[29] = 0;
   out_6609914163391936085[30] = 0;
   out_6609914163391936085[31] = 0;
   out_6609914163391936085[32] = 0;
   out_6609914163391936085[33] = 0;
   out_6609914163391936085[34] = 0;
   out_6609914163391936085[35] = 0;
   out_6609914163391936085[36] = 0;
   out_6609914163391936085[37] = 0;
   out_6609914163391936085[38] = 0;
   out_6609914163391936085[39] = 0;
   out_6609914163391936085[40] = 0;
   out_6609914163391936085[41] = 0;
   out_6609914163391936085[42] = 0;
   out_6609914163391936085[43] = 0;
   out_6609914163391936085[44] = 1;
   out_6609914163391936085[45] = 0;
   out_6609914163391936085[46] = 0;
   out_6609914163391936085[47] = 0;
   out_6609914163391936085[48] = 0;
   out_6609914163391936085[49] = 0;
   out_6609914163391936085[50] = dt;
   out_6609914163391936085[51] = 0;
   out_6609914163391936085[52] = 0;
   out_6609914163391936085[53] = 0;
   out_6609914163391936085[54] = 0;
   out_6609914163391936085[55] = 0;
   out_6609914163391936085[56] = 0;
   out_6609914163391936085[57] = 0;
   out_6609914163391936085[58] = 0;
   out_6609914163391936085[59] = 0;
   out_6609914163391936085[60] = 0;
   out_6609914163391936085[61] = 0;
   out_6609914163391936085[62] = 0;
   out_6609914163391936085[63] = 0;
   out_6609914163391936085[64] = 0;
   out_6609914163391936085[65] = 0;
   out_6609914163391936085[66] = 1;
   out_6609914163391936085[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6609914163391936085[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_6609914163391936085[69] = 0;
   out_6609914163391936085[70] = 0;
   out_6609914163391936085[71] = 0;
   out_6609914163391936085[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6609914163391936085[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6609914163391936085[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6609914163391936085[75] = 0;
   out_6609914163391936085[76] = 0;
   out_6609914163391936085[77] = 0;
   out_6609914163391936085[78] = 0;
   out_6609914163391936085[79] = 0;
   out_6609914163391936085[80] = 0;
   out_6609914163391936085[81] = 0;
   out_6609914163391936085[82] = 0;
   out_6609914163391936085[83] = 0;
   out_6609914163391936085[84] = 0;
   out_6609914163391936085[85] = 0;
   out_6609914163391936085[86] = 0;
   out_6609914163391936085[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6609914163391936085[88] = 1;
   out_6609914163391936085[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_6609914163391936085[90] = 0;
   out_6609914163391936085[91] = 0;
   out_6609914163391936085[92] = 0;
   out_6609914163391936085[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6609914163391936085[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6609914163391936085[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6609914163391936085[96] = 0;
   out_6609914163391936085[97] = 0;
   out_6609914163391936085[98] = 0;
   out_6609914163391936085[99] = 0;
   out_6609914163391936085[100] = 0;
   out_6609914163391936085[101] = 0;
   out_6609914163391936085[102] = 0;
   out_6609914163391936085[103] = 0;
   out_6609914163391936085[104] = 0;
   out_6609914163391936085[105] = 0;
   out_6609914163391936085[106] = 0;
   out_6609914163391936085[107] = 0;
   out_6609914163391936085[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_6609914163391936085[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_6609914163391936085[110] = 1;
   out_6609914163391936085[111] = 0;
   out_6609914163391936085[112] = 0;
   out_6609914163391936085[113] = 0;
   out_6609914163391936085[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6609914163391936085[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6609914163391936085[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6609914163391936085[117] = 0;
   out_6609914163391936085[118] = 0;
   out_6609914163391936085[119] = 0;
   out_6609914163391936085[120] = 0;
   out_6609914163391936085[121] = 0;
   out_6609914163391936085[122] = 0;
   out_6609914163391936085[123] = 0;
   out_6609914163391936085[124] = 0;
   out_6609914163391936085[125] = 0;
   out_6609914163391936085[126] = 0;
   out_6609914163391936085[127] = 0;
   out_6609914163391936085[128] = 0;
   out_6609914163391936085[129] = 0;
   out_6609914163391936085[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6609914163391936085[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_6609914163391936085[132] = 1;
   out_6609914163391936085[133] = 0;
   out_6609914163391936085[134] = 0;
   out_6609914163391936085[135] = 0;
   out_6609914163391936085[136] = 0;
   out_6609914163391936085[137] = 0;
   out_6609914163391936085[138] = 0;
   out_6609914163391936085[139] = 0;
   out_6609914163391936085[140] = 0;
   out_6609914163391936085[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6609914163391936085[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6609914163391936085[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6609914163391936085[144] = 0;
   out_6609914163391936085[145] = 0;
   out_6609914163391936085[146] = 0;
   out_6609914163391936085[147] = 0;
   out_6609914163391936085[148] = 0;
   out_6609914163391936085[149] = 0;
   out_6609914163391936085[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6609914163391936085[151] = 0;
   out_6609914163391936085[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_6609914163391936085[153] = 0;
   out_6609914163391936085[154] = 1;
   out_6609914163391936085[155] = 0;
   out_6609914163391936085[156] = 0;
   out_6609914163391936085[157] = 0;
   out_6609914163391936085[158] = 0;
   out_6609914163391936085[159] = 0;
   out_6609914163391936085[160] = 0;
   out_6609914163391936085[161] = 0;
   out_6609914163391936085[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6609914163391936085[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6609914163391936085[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6609914163391936085[165] = 0;
   out_6609914163391936085[166] = 0;
   out_6609914163391936085[167] = 0;
   out_6609914163391936085[168] = 0;
   out_6609914163391936085[169] = 0;
   out_6609914163391936085[170] = 0;
   out_6609914163391936085[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_6609914163391936085[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_6609914163391936085[173] = 0;
   out_6609914163391936085[174] = 0;
   out_6609914163391936085[175] = 0;
   out_6609914163391936085[176] = 1;
   out_6609914163391936085[177] = 0;
   out_6609914163391936085[178] = 0;
   out_6609914163391936085[179] = 0;
   out_6609914163391936085[180] = 0;
   out_6609914163391936085[181] = 0;
   out_6609914163391936085[182] = 0;
   out_6609914163391936085[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6609914163391936085[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6609914163391936085[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6609914163391936085[186] = 0;
   out_6609914163391936085[187] = 0;
   out_6609914163391936085[188] = 0;
   out_6609914163391936085[189] = 0;
   out_6609914163391936085[190] = 0;
   out_6609914163391936085[191] = 0;
   out_6609914163391936085[192] = 0;
   out_6609914163391936085[193] = 0;
   out_6609914163391936085[194] = 0;
   out_6609914163391936085[195] = 0;
   out_6609914163391936085[196] = 0;
   out_6609914163391936085[197] = 0;
   out_6609914163391936085[198] = 1;
   out_6609914163391936085[199] = 0;
   out_6609914163391936085[200] = 0;
   out_6609914163391936085[201] = 0;
   out_6609914163391936085[202] = 0;
   out_6609914163391936085[203] = 0;
   out_6609914163391936085[204] = 0;
   out_6609914163391936085[205] = 0;
   out_6609914163391936085[206] = 0;
   out_6609914163391936085[207] = 0;
   out_6609914163391936085[208] = 0;
   out_6609914163391936085[209] = 0;
   out_6609914163391936085[210] = 0;
   out_6609914163391936085[211] = 0;
   out_6609914163391936085[212] = 0;
   out_6609914163391936085[213] = 0;
   out_6609914163391936085[214] = 0;
   out_6609914163391936085[215] = 0;
   out_6609914163391936085[216] = 0;
   out_6609914163391936085[217] = 0;
   out_6609914163391936085[218] = 0;
   out_6609914163391936085[219] = 0;
   out_6609914163391936085[220] = 1;
   out_6609914163391936085[221] = 0;
   out_6609914163391936085[222] = 0;
   out_6609914163391936085[223] = 0;
   out_6609914163391936085[224] = 0;
   out_6609914163391936085[225] = 0;
   out_6609914163391936085[226] = 0;
   out_6609914163391936085[227] = 0;
   out_6609914163391936085[228] = 0;
   out_6609914163391936085[229] = 0;
   out_6609914163391936085[230] = 0;
   out_6609914163391936085[231] = 0;
   out_6609914163391936085[232] = 0;
   out_6609914163391936085[233] = 0;
   out_6609914163391936085[234] = 0;
   out_6609914163391936085[235] = 0;
   out_6609914163391936085[236] = 0;
   out_6609914163391936085[237] = 0;
   out_6609914163391936085[238] = 0;
   out_6609914163391936085[239] = 0;
   out_6609914163391936085[240] = 0;
   out_6609914163391936085[241] = 0;
   out_6609914163391936085[242] = 1;
   out_6609914163391936085[243] = 0;
   out_6609914163391936085[244] = 0;
   out_6609914163391936085[245] = 0;
   out_6609914163391936085[246] = 0;
   out_6609914163391936085[247] = 0;
   out_6609914163391936085[248] = 0;
   out_6609914163391936085[249] = 0;
   out_6609914163391936085[250] = 0;
   out_6609914163391936085[251] = 0;
   out_6609914163391936085[252] = 0;
   out_6609914163391936085[253] = 0;
   out_6609914163391936085[254] = 0;
   out_6609914163391936085[255] = 0;
   out_6609914163391936085[256] = 0;
   out_6609914163391936085[257] = 0;
   out_6609914163391936085[258] = 0;
   out_6609914163391936085[259] = 0;
   out_6609914163391936085[260] = 0;
   out_6609914163391936085[261] = 0;
   out_6609914163391936085[262] = 0;
   out_6609914163391936085[263] = 0;
   out_6609914163391936085[264] = 1;
   out_6609914163391936085[265] = 0;
   out_6609914163391936085[266] = 0;
   out_6609914163391936085[267] = 0;
   out_6609914163391936085[268] = 0;
   out_6609914163391936085[269] = 0;
   out_6609914163391936085[270] = 0;
   out_6609914163391936085[271] = 0;
   out_6609914163391936085[272] = 0;
   out_6609914163391936085[273] = 0;
   out_6609914163391936085[274] = 0;
   out_6609914163391936085[275] = 0;
   out_6609914163391936085[276] = 0;
   out_6609914163391936085[277] = 0;
   out_6609914163391936085[278] = 0;
   out_6609914163391936085[279] = 0;
   out_6609914163391936085[280] = 0;
   out_6609914163391936085[281] = 0;
   out_6609914163391936085[282] = 0;
   out_6609914163391936085[283] = 0;
   out_6609914163391936085[284] = 0;
   out_6609914163391936085[285] = 0;
   out_6609914163391936085[286] = 1;
   out_6609914163391936085[287] = 0;
   out_6609914163391936085[288] = 0;
   out_6609914163391936085[289] = 0;
   out_6609914163391936085[290] = 0;
   out_6609914163391936085[291] = 0;
   out_6609914163391936085[292] = 0;
   out_6609914163391936085[293] = 0;
   out_6609914163391936085[294] = 0;
   out_6609914163391936085[295] = 0;
   out_6609914163391936085[296] = 0;
   out_6609914163391936085[297] = 0;
   out_6609914163391936085[298] = 0;
   out_6609914163391936085[299] = 0;
   out_6609914163391936085[300] = 0;
   out_6609914163391936085[301] = 0;
   out_6609914163391936085[302] = 0;
   out_6609914163391936085[303] = 0;
   out_6609914163391936085[304] = 0;
   out_6609914163391936085[305] = 0;
   out_6609914163391936085[306] = 0;
   out_6609914163391936085[307] = 0;
   out_6609914163391936085[308] = 1;
   out_6609914163391936085[309] = 0;
   out_6609914163391936085[310] = 0;
   out_6609914163391936085[311] = 0;
   out_6609914163391936085[312] = 0;
   out_6609914163391936085[313] = 0;
   out_6609914163391936085[314] = 0;
   out_6609914163391936085[315] = 0;
   out_6609914163391936085[316] = 0;
   out_6609914163391936085[317] = 0;
   out_6609914163391936085[318] = 0;
   out_6609914163391936085[319] = 0;
   out_6609914163391936085[320] = 0;
   out_6609914163391936085[321] = 0;
   out_6609914163391936085[322] = 0;
   out_6609914163391936085[323] = 0;
   out_6609914163391936085[324] = 0;
   out_6609914163391936085[325] = 0;
   out_6609914163391936085[326] = 0;
   out_6609914163391936085[327] = 0;
   out_6609914163391936085[328] = 0;
   out_6609914163391936085[329] = 0;
   out_6609914163391936085[330] = 1;
   out_6609914163391936085[331] = 0;
   out_6609914163391936085[332] = 0;
   out_6609914163391936085[333] = 0;
   out_6609914163391936085[334] = 0;
   out_6609914163391936085[335] = 0;
   out_6609914163391936085[336] = 0;
   out_6609914163391936085[337] = 0;
   out_6609914163391936085[338] = 0;
   out_6609914163391936085[339] = 0;
   out_6609914163391936085[340] = 0;
   out_6609914163391936085[341] = 0;
   out_6609914163391936085[342] = 0;
   out_6609914163391936085[343] = 0;
   out_6609914163391936085[344] = 0;
   out_6609914163391936085[345] = 0;
   out_6609914163391936085[346] = 0;
   out_6609914163391936085[347] = 0;
   out_6609914163391936085[348] = 0;
   out_6609914163391936085[349] = 0;
   out_6609914163391936085[350] = 0;
   out_6609914163391936085[351] = 0;
   out_6609914163391936085[352] = 1;
   out_6609914163391936085[353] = 0;
   out_6609914163391936085[354] = 0;
   out_6609914163391936085[355] = 0;
   out_6609914163391936085[356] = 0;
   out_6609914163391936085[357] = 0;
   out_6609914163391936085[358] = 0;
   out_6609914163391936085[359] = 0;
   out_6609914163391936085[360] = 0;
   out_6609914163391936085[361] = 0;
   out_6609914163391936085[362] = 0;
   out_6609914163391936085[363] = 0;
   out_6609914163391936085[364] = 0;
   out_6609914163391936085[365] = 0;
   out_6609914163391936085[366] = 0;
   out_6609914163391936085[367] = 0;
   out_6609914163391936085[368] = 0;
   out_6609914163391936085[369] = 0;
   out_6609914163391936085[370] = 0;
   out_6609914163391936085[371] = 0;
   out_6609914163391936085[372] = 0;
   out_6609914163391936085[373] = 0;
   out_6609914163391936085[374] = 1;
   out_6609914163391936085[375] = 0;
   out_6609914163391936085[376] = 0;
   out_6609914163391936085[377] = 0;
   out_6609914163391936085[378] = 0;
   out_6609914163391936085[379] = 0;
   out_6609914163391936085[380] = 0;
   out_6609914163391936085[381] = 0;
   out_6609914163391936085[382] = 0;
   out_6609914163391936085[383] = 0;
   out_6609914163391936085[384] = 0;
   out_6609914163391936085[385] = 0;
   out_6609914163391936085[386] = 0;
   out_6609914163391936085[387] = 0;
   out_6609914163391936085[388] = 0;
   out_6609914163391936085[389] = 0;
   out_6609914163391936085[390] = 0;
   out_6609914163391936085[391] = 0;
   out_6609914163391936085[392] = 0;
   out_6609914163391936085[393] = 0;
   out_6609914163391936085[394] = 0;
   out_6609914163391936085[395] = 0;
   out_6609914163391936085[396] = 1;
   out_6609914163391936085[397] = 0;
   out_6609914163391936085[398] = 0;
   out_6609914163391936085[399] = 0;
   out_6609914163391936085[400] = 0;
   out_6609914163391936085[401] = 0;
   out_6609914163391936085[402] = 0;
   out_6609914163391936085[403] = 0;
   out_6609914163391936085[404] = 0;
   out_6609914163391936085[405] = 0;
   out_6609914163391936085[406] = 0;
   out_6609914163391936085[407] = 0;
   out_6609914163391936085[408] = 0;
   out_6609914163391936085[409] = 0;
   out_6609914163391936085[410] = 0;
   out_6609914163391936085[411] = 0;
   out_6609914163391936085[412] = 0;
   out_6609914163391936085[413] = 0;
   out_6609914163391936085[414] = 0;
   out_6609914163391936085[415] = 0;
   out_6609914163391936085[416] = 0;
   out_6609914163391936085[417] = 0;
   out_6609914163391936085[418] = 1;
   out_6609914163391936085[419] = 0;
   out_6609914163391936085[420] = 0;
   out_6609914163391936085[421] = 0;
   out_6609914163391936085[422] = 0;
   out_6609914163391936085[423] = 0;
   out_6609914163391936085[424] = 0;
   out_6609914163391936085[425] = 0;
   out_6609914163391936085[426] = 0;
   out_6609914163391936085[427] = 0;
   out_6609914163391936085[428] = 0;
   out_6609914163391936085[429] = 0;
   out_6609914163391936085[430] = 0;
   out_6609914163391936085[431] = 0;
   out_6609914163391936085[432] = 0;
   out_6609914163391936085[433] = 0;
   out_6609914163391936085[434] = 0;
   out_6609914163391936085[435] = 0;
   out_6609914163391936085[436] = 0;
   out_6609914163391936085[437] = 0;
   out_6609914163391936085[438] = 0;
   out_6609914163391936085[439] = 0;
   out_6609914163391936085[440] = 1;
}
void h_4(double *state, double *unused, double *out_6011813983550882776) {
   out_6011813983550882776[0] = state[10] + state[13];
   out_6011813983550882776[1] = state[11] + state[14];
   out_6011813983550882776[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_2098171024544885215) {
   out_2098171024544885215[0] = 0;
   out_2098171024544885215[1] = 0;
   out_2098171024544885215[2] = 0;
   out_2098171024544885215[3] = 0;
   out_2098171024544885215[4] = 0;
   out_2098171024544885215[5] = 0;
   out_2098171024544885215[6] = 0;
   out_2098171024544885215[7] = 0;
   out_2098171024544885215[8] = 0;
   out_2098171024544885215[9] = 0;
   out_2098171024544885215[10] = 1;
   out_2098171024544885215[11] = 0;
   out_2098171024544885215[12] = 0;
   out_2098171024544885215[13] = 1;
   out_2098171024544885215[14] = 0;
   out_2098171024544885215[15] = 0;
   out_2098171024544885215[16] = 0;
   out_2098171024544885215[17] = 0;
   out_2098171024544885215[18] = 0;
   out_2098171024544885215[19] = 0;
   out_2098171024544885215[20] = 0;
   out_2098171024544885215[21] = 0;
   out_2098171024544885215[22] = 0;
   out_2098171024544885215[23] = 0;
   out_2098171024544885215[24] = 0;
   out_2098171024544885215[25] = 0;
   out_2098171024544885215[26] = 0;
   out_2098171024544885215[27] = 0;
   out_2098171024544885215[28] = 0;
   out_2098171024544885215[29] = 0;
   out_2098171024544885215[30] = 0;
   out_2098171024544885215[31] = 0;
   out_2098171024544885215[32] = 0;
   out_2098171024544885215[33] = 1;
   out_2098171024544885215[34] = 0;
   out_2098171024544885215[35] = 0;
   out_2098171024544885215[36] = 1;
   out_2098171024544885215[37] = 0;
   out_2098171024544885215[38] = 0;
   out_2098171024544885215[39] = 0;
   out_2098171024544885215[40] = 0;
   out_2098171024544885215[41] = 0;
   out_2098171024544885215[42] = 0;
   out_2098171024544885215[43] = 0;
   out_2098171024544885215[44] = 0;
   out_2098171024544885215[45] = 0;
   out_2098171024544885215[46] = 0;
   out_2098171024544885215[47] = 0;
   out_2098171024544885215[48] = 0;
   out_2098171024544885215[49] = 0;
   out_2098171024544885215[50] = 0;
   out_2098171024544885215[51] = 0;
   out_2098171024544885215[52] = 0;
   out_2098171024544885215[53] = 0;
   out_2098171024544885215[54] = 0;
   out_2098171024544885215[55] = 0;
   out_2098171024544885215[56] = 1;
   out_2098171024544885215[57] = 0;
   out_2098171024544885215[58] = 0;
   out_2098171024544885215[59] = 1;
   out_2098171024544885215[60] = 0;
   out_2098171024544885215[61] = 0;
   out_2098171024544885215[62] = 0;
   out_2098171024544885215[63] = 0;
   out_2098171024544885215[64] = 0;
   out_2098171024544885215[65] = 0;
}
void h_9(double *state, double *unused, double *out_3902237370978173728) {
   out_3902237370978173728[0] = state[10];
   out_3902237370978173728[1] = state[11];
   out_3902237370978173728[2] = state[12];
}
void H_9(double *state, double *unused, double *out_9061354113900218931) {
   out_9061354113900218931[0] = 0;
   out_9061354113900218931[1] = 0;
   out_9061354113900218931[2] = 0;
   out_9061354113900218931[3] = 0;
   out_9061354113900218931[4] = 0;
   out_9061354113900218931[5] = 0;
   out_9061354113900218931[6] = 0;
   out_9061354113900218931[7] = 0;
   out_9061354113900218931[8] = 0;
   out_9061354113900218931[9] = 0;
   out_9061354113900218931[10] = 1;
   out_9061354113900218931[11] = 0;
   out_9061354113900218931[12] = 0;
   out_9061354113900218931[13] = 0;
   out_9061354113900218931[14] = 0;
   out_9061354113900218931[15] = 0;
   out_9061354113900218931[16] = 0;
   out_9061354113900218931[17] = 0;
   out_9061354113900218931[18] = 0;
   out_9061354113900218931[19] = 0;
   out_9061354113900218931[20] = 0;
   out_9061354113900218931[21] = 0;
   out_9061354113900218931[22] = 0;
   out_9061354113900218931[23] = 0;
   out_9061354113900218931[24] = 0;
   out_9061354113900218931[25] = 0;
   out_9061354113900218931[26] = 0;
   out_9061354113900218931[27] = 0;
   out_9061354113900218931[28] = 0;
   out_9061354113900218931[29] = 0;
   out_9061354113900218931[30] = 0;
   out_9061354113900218931[31] = 0;
   out_9061354113900218931[32] = 0;
   out_9061354113900218931[33] = 1;
   out_9061354113900218931[34] = 0;
   out_9061354113900218931[35] = 0;
   out_9061354113900218931[36] = 0;
   out_9061354113900218931[37] = 0;
   out_9061354113900218931[38] = 0;
   out_9061354113900218931[39] = 0;
   out_9061354113900218931[40] = 0;
   out_9061354113900218931[41] = 0;
   out_9061354113900218931[42] = 0;
   out_9061354113900218931[43] = 0;
   out_9061354113900218931[44] = 0;
   out_9061354113900218931[45] = 0;
   out_9061354113900218931[46] = 0;
   out_9061354113900218931[47] = 0;
   out_9061354113900218931[48] = 0;
   out_9061354113900218931[49] = 0;
   out_9061354113900218931[50] = 0;
   out_9061354113900218931[51] = 0;
   out_9061354113900218931[52] = 0;
   out_9061354113900218931[53] = 0;
   out_9061354113900218931[54] = 0;
   out_9061354113900218931[55] = 0;
   out_9061354113900218931[56] = 1;
   out_9061354113900218931[57] = 0;
   out_9061354113900218931[58] = 0;
   out_9061354113900218931[59] = 0;
   out_9061354113900218931[60] = 0;
   out_9061354113900218931[61] = 0;
   out_9061354113900218931[62] = 0;
   out_9061354113900218931[63] = 0;
   out_9061354113900218931[64] = 0;
   out_9061354113900218931[65] = 0;
}
void h_10(double *state, double *unused, double *out_8822121513169463888) {
   out_8822121513169463888[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_8822121513169463888[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_8822121513169463888[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_5660519162938753925) {
   out_5660519162938753925[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5660519162938753925[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5660519162938753925[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_5660519162938753925[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5660519162938753925[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5660519162938753925[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5660519162938753925[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5660519162938753925[7] = 0;
   out_5660519162938753925[8] = 0;
   out_5660519162938753925[9] = 0;
   out_5660519162938753925[10] = 0;
   out_5660519162938753925[11] = 0;
   out_5660519162938753925[12] = 0;
   out_5660519162938753925[13] = 0;
   out_5660519162938753925[14] = 0;
   out_5660519162938753925[15] = 0;
   out_5660519162938753925[16] = 1;
   out_5660519162938753925[17] = 0;
   out_5660519162938753925[18] = 0;
   out_5660519162938753925[19] = 1;
   out_5660519162938753925[20] = 0;
   out_5660519162938753925[21] = 0;
   out_5660519162938753925[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5660519162938753925[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5660519162938753925[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_5660519162938753925[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5660519162938753925[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5660519162938753925[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5660519162938753925[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5660519162938753925[29] = 0;
   out_5660519162938753925[30] = 0;
   out_5660519162938753925[31] = 0;
   out_5660519162938753925[32] = 0;
   out_5660519162938753925[33] = 0;
   out_5660519162938753925[34] = 0;
   out_5660519162938753925[35] = 0;
   out_5660519162938753925[36] = 0;
   out_5660519162938753925[37] = 0;
   out_5660519162938753925[38] = 0;
   out_5660519162938753925[39] = 1;
   out_5660519162938753925[40] = 0;
   out_5660519162938753925[41] = 0;
   out_5660519162938753925[42] = 1;
   out_5660519162938753925[43] = 0;
   out_5660519162938753925[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_5660519162938753925[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_5660519162938753925[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5660519162938753925[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5660519162938753925[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5660519162938753925[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5660519162938753925[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5660519162938753925[51] = 0;
   out_5660519162938753925[52] = 0;
   out_5660519162938753925[53] = 0;
   out_5660519162938753925[54] = 0;
   out_5660519162938753925[55] = 0;
   out_5660519162938753925[56] = 0;
   out_5660519162938753925[57] = 0;
   out_5660519162938753925[58] = 0;
   out_5660519162938753925[59] = 0;
   out_5660519162938753925[60] = 0;
   out_5660519162938753925[61] = 0;
   out_5660519162938753925[62] = 1;
   out_5660519162938753925[63] = 0;
   out_5660519162938753925[64] = 0;
   out_5660519162938753925[65] = 1;
}
void h_12(double *state, double *unused, double *out_9198692797862017000) {
   out_9198692797862017000[0] = state[0];
   out_9198692797862017000[1] = state[1];
   out_9198692797862017000[2] = state[2];
}
void H_12(double *state, double *unused, double *out_4283087352497847781) {
   out_4283087352497847781[0] = 1;
   out_4283087352497847781[1] = 0;
   out_4283087352497847781[2] = 0;
   out_4283087352497847781[3] = 0;
   out_4283087352497847781[4] = 0;
   out_4283087352497847781[5] = 0;
   out_4283087352497847781[6] = 0;
   out_4283087352497847781[7] = 0;
   out_4283087352497847781[8] = 0;
   out_4283087352497847781[9] = 0;
   out_4283087352497847781[10] = 0;
   out_4283087352497847781[11] = 0;
   out_4283087352497847781[12] = 0;
   out_4283087352497847781[13] = 0;
   out_4283087352497847781[14] = 0;
   out_4283087352497847781[15] = 0;
   out_4283087352497847781[16] = 0;
   out_4283087352497847781[17] = 0;
   out_4283087352497847781[18] = 0;
   out_4283087352497847781[19] = 0;
   out_4283087352497847781[20] = 0;
   out_4283087352497847781[21] = 0;
   out_4283087352497847781[22] = 0;
   out_4283087352497847781[23] = 1;
   out_4283087352497847781[24] = 0;
   out_4283087352497847781[25] = 0;
   out_4283087352497847781[26] = 0;
   out_4283087352497847781[27] = 0;
   out_4283087352497847781[28] = 0;
   out_4283087352497847781[29] = 0;
   out_4283087352497847781[30] = 0;
   out_4283087352497847781[31] = 0;
   out_4283087352497847781[32] = 0;
   out_4283087352497847781[33] = 0;
   out_4283087352497847781[34] = 0;
   out_4283087352497847781[35] = 0;
   out_4283087352497847781[36] = 0;
   out_4283087352497847781[37] = 0;
   out_4283087352497847781[38] = 0;
   out_4283087352497847781[39] = 0;
   out_4283087352497847781[40] = 0;
   out_4283087352497847781[41] = 0;
   out_4283087352497847781[42] = 0;
   out_4283087352497847781[43] = 0;
   out_4283087352497847781[44] = 0;
   out_4283087352497847781[45] = 0;
   out_4283087352497847781[46] = 1;
   out_4283087352497847781[47] = 0;
   out_4283087352497847781[48] = 0;
   out_4283087352497847781[49] = 0;
   out_4283087352497847781[50] = 0;
   out_4283087352497847781[51] = 0;
   out_4283087352497847781[52] = 0;
   out_4283087352497847781[53] = 0;
   out_4283087352497847781[54] = 0;
   out_4283087352497847781[55] = 0;
   out_4283087352497847781[56] = 0;
   out_4283087352497847781[57] = 0;
   out_4283087352497847781[58] = 0;
   out_4283087352497847781[59] = 0;
   out_4283087352497847781[60] = 0;
   out_4283087352497847781[61] = 0;
   out_4283087352497847781[62] = 0;
   out_4283087352497847781[63] = 0;
   out_4283087352497847781[64] = 0;
   out_4283087352497847781[65] = 0;
}
void h_31(double *state, double *unused, double *out_4675503687168181330) {
   out_4675503687168181330[0] = state[7];
   out_4675503687168181330[1] = state[8];
   out_4675503687168181330[2] = state[9];
}
void H_31(double *state, double *unused, double *out_1537524320172834072) {
   out_1537524320172834072[0] = 0;
   out_1537524320172834072[1] = 0;
   out_1537524320172834072[2] = 0;
   out_1537524320172834072[3] = 0;
   out_1537524320172834072[4] = 0;
   out_1537524320172834072[5] = 0;
   out_1537524320172834072[6] = 0;
   out_1537524320172834072[7] = 1;
   out_1537524320172834072[8] = 0;
   out_1537524320172834072[9] = 0;
   out_1537524320172834072[10] = 0;
   out_1537524320172834072[11] = 0;
   out_1537524320172834072[12] = 0;
   out_1537524320172834072[13] = 0;
   out_1537524320172834072[14] = 0;
   out_1537524320172834072[15] = 0;
   out_1537524320172834072[16] = 0;
   out_1537524320172834072[17] = 0;
   out_1537524320172834072[18] = 0;
   out_1537524320172834072[19] = 0;
   out_1537524320172834072[20] = 0;
   out_1537524320172834072[21] = 0;
   out_1537524320172834072[22] = 0;
   out_1537524320172834072[23] = 0;
   out_1537524320172834072[24] = 0;
   out_1537524320172834072[25] = 0;
   out_1537524320172834072[26] = 0;
   out_1537524320172834072[27] = 0;
   out_1537524320172834072[28] = 0;
   out_1537524320172834072[29] = 0;
   out_1537524320172834072[30] = 1;
   out_1537524320172834072[31] = 0;
   out_1537524320172834072[32] = 0;
   out_1537524320172834072[33] = 0;
   out_1537524320172834072[34] = 0;
   out_1537524320172834072[35] = 0;
   out_1537524320172834072[36] = 0;
   out_1537524320172834072[37] = 0;
   out_1537524320172834072[38] = 0;
   out_1537524320172834072[39] = 0;
   out_1537524320172834072[40] = 0;
   out_1537524320172834072[41] = 0;
   out_1537524320172834072[42] = 0;
   out_1537524320172834072[43] = 0;
   out_1537524320172834072[44] = 0;
   out_1537524320172834072[45] = 0;
   out_1537524320172834072[46] = 0;
   out_1537524320172834072[47] = 0;
   out_1537524320172834072[48] = 0;
   out_1537524320172834072[49] = 0;
   out_1537524320172834072[50] = 0;
   out_1537524320172834072[51] = 0;
   out_1537524320172834072[52] = 0;
   out_1537524320172834072[53] = 1;
   out_1537524320172834072[54] = 0;
   out_1537524320172834072[55] = 0;
   out_1537524320172834072[56] = 0;
   out_1537524320172834072[57] = 0;
   out_1537524320172834072[58] = 0;
   out_1537524320172834072[59] = 0;
   out_1537524320172834072[60] = 0;
   out_1537524320172834072[61] = 0;
   out_1537524320172834072[62] = 0;
   out_1537524320172834072[63] = 0;
   out_1537524320172834072[64] = 0;
   out_1537524320172834072[65] = 0;
}
void h_32(double *state, double *unused, double *out_7047972252560525334) {
   out_7047972252560525334[0] = state[3];
   out_7047972252560525334[1] = state[4];
   out_7047972252560525334[2] = state[5];
   out_7047972252560525334[3] = state[6];
}
void H_32(double *state, double *unused, double *out_4263780052034778486) {
   out_4263780052034778486[0] = 0;
   out_4263780052034778486[1] = 0;
   out_4263780052034778486[2] = 0;
   out_4263780052034778486[3] = 1;
   out_4263780052034778486[4] = 0;
   out_4263780052034778486[5] = 0;
   out_4263780052034778486[6] = 0;
   out_4263780052034778486[7] = 0;
   out_4263780052034778486[8] = 0;
   out_4263780052034778486[9] = 0;
   out_4263780052034778486[10] = 0;
   out_4263780052034778486[11] = 0;
   out_4263780052034778486[12] = 0;
   out_4263780052034778486[13] = 0;
   out_4263780052034778486[14] = 0;
   out_4263780052034778486[15] = 0;
   out_4263780052034778486[16] = 0;
   out_4263780052034778486[17] = 0;
   out_4263780052034778486[18] = 0;
   out_4263780052034778486[19] = 0;
   out_4263780052034778486[20] = 0;
   out_4263780052034778486[21] = 0;
   out_4263780052034778486[22] = 0;
   out_4263780052034778486[23] = 0;
   out_4263780052034778486[24] = 0;
   out_4263780052034778486[25] = 0;
   out_4263780052034778486[26] = 1;
   out_4263780052034778486[27] = 0;
   out_4263780052034778486[28] = 0;
   out_4263780052034778486[29] = 0;
   out_4263780052034778486[30] = 0;
   out_4263780052034778486[31] = 0;
   out_4263780052034778486[32] = 0;
   out_4263780052034778486[33] = 0;
   out_4263780052034778486[34] = 0;
   out_4263780052034778486[35] = 0;
   out_4263780052034778486[36] = 0;
   out_4263780052034778486[37] = 0;
   out_4263780052034778486[38] = 0;
   out_4263780052034778486[39] = 0;
   out_4263780052034778486[40] = 0;
   out_4263780052034778486[41] = 0;
   out_4263780052034778486[42] = 0;
   out_4263780052034778486[43] = 0;
   out_4263780052034778486[44] = 0;
   out_4263780052034778486[45] = 0;
   out_4263780052034778486[46] = 0;
   out_4263780052034778486[47] = 0;
   out_4263780052034778486[48] = 0;
   out_4263780052034778486[49] = 1;
   out_4263780052034778486[50] = 0;
   out_4263780052034778486[51] = 0;
   out_4263780052034778486[52] = 0;
   out_4263780052034778486[53] = 0;
   out_4263780052034778486[54] = 0;
   out_4263780052034778486[55] = 0;
   out_4263780052034778486[56] = 0;
   out_4263780052034778486[57] = 0;
   out_4263780052034778486[58] = 0;
   out_4263780052034778486[59] = 0;
   out_4263780052034778486[60] = 0;
   out_4263780052034778486[61] = 0;
   out_4263780052034778486[62] = 0;
   out_4263780052034778486[63] = 0;
   out_4263780052034778486[64] = 0;
   out_4263780052034778486[65] = 0;
   out_4263780052034778486[66] = 0;
   out_4263780052034778486[67] = 0;
   out_4263780052034778486[68] = 0;
   out_4263780052034778486[69] = 0;
   out_4263780052034778486[70] = 0;
   out_4263780052034778486[71] = 0;
   out_4263780052034778486[72] = 1;
   out_4263780052034778486[73] = 0;
   out_4263780052034778486[74] = 0;
   out_4263780052034778486[75] = 0;
   out_4263780052034778486[76] = 0;
   out_4263780052034778486[77] = 0;
   out_4263780052034778486[78] = 0;
   out_4263780052034778486[79] = 0;
   out_4263780052034778486[80] = 0;
   out_4263780052034778486[81] = 0;
   out_4263780052034778486[82] = 0;
   out_4263780052034778486[83] = 0;
   out_4263780052034778486[84] = 0;
   out_4263780052034778486[85] = 0;
   out_4263780052034778486[86] = 0;
   out_4263780052034778486[87] = 0;
}
void h_13(double *state, double *unused, double *out_3252000326958521153) {
   out_3252000326958521153[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_3252000326958521153[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_3252000326958521153[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_5915097730122734872) {
   out_5915097730122734872[0] = 0;
   out_5915097730122734872[1] = 0;
   out_5915097730122734872[2] = 0;
   out_5915097730122734872[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5915097730122734872[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5915097730122734872[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_5915097730122734872[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5915097730122734872[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_5915097730122734872[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_5915097730122734872[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_5915097730122734872[10] = 0;
   out_5915097730122734872[11] = 0;
   out_5915097730122734872[12] = 0;
   out_5915097730122734872[13] = 0;
   out_5915097730122734872[14] = 0;
   out_5915097730122734872[15] = 0;
   out_5915097730122734872[16] = 0;
   out_5915097730122734872[17] = 0;
   out_5915097730122734872[18] = 0;
   out_5915097730122734872[19] = 0;
   out_5915097730122734872[20] = 0;
   out_5915097730122734872[21] = 0;
   out_5915097730122734872[22] = 0;
   out_5915097730122734872[23] = 0;
   out_5915097730122734872[24] = 0;
   out_5915097730122734872[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5915097730122734872[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5915097730122734872[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5915097730122734872[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_5915097730122734872[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_5915097730122734872[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_5915097730122734872[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_5915097730122734872[32] = 0;
   out_5915097730122734872[33] = 0;
   out_5915097730122734872[34] = 0;
   out_5915097730122734872[35] = 0;
   out_5915097730122734872[36] = 0;
   out_5915097730122734872[37] = 0;
   out_5915097730122734872[38] = 0;
   out_5915097730122734872[39] = 0;
   out_5915097730122734872[40] = 0;
   out_5915097730122734872[41] = 0;
   out_5915097730122734872[42] = 0;
   out_5915097730122734872[43] = 0;
   out_5915097730122734872[44] = 0;
   out_5915097730122734872[45] = 0;
   out_5915097730122734872[46] = 0;
   out_5915097730122734872[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5915097730122734872[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_5915097730122734872[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5915097730122734872[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5915097730122734872[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_5915097730122734872[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_5915097730122734872[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_5915097730122734872[54] = 0;
   out_5915097730122734872[55] = 0;
   out_5915097730122734872[56] = 0;
   out_5915097730122734872[57] = 0;
   out_5915097730122734872[58] = 0;
   out_5915097730122734872[59] = 0;
   out_5915097730122734872[60] = 0;
   out_5915097730122734872[61] = 0;
   out_5915097730122734872[62] = 0;
   out_5915097730122734872[63] = 0;
   out_5915097730122734872[64] = 0;
   out_5915097730122734872[65] = 0;
}
void h_14(double *state, double *unused, double *out_3902237370978173728) {
   out_3902237370978173728[0] = state[10];
   out_3902237370978173728[1] = state[11];
   out_3902237370978173728[2] = state[12];
}
void H_14(double *state, double *unused, double *out_9061354113900218931) {
   out_9061354113900218931[0] = 0;
   out_9061354113900218931[1] = 0;
   out_9061354113900218931[2] = 0;
   out_9061354113900218931[3] = 0;
   out_9061354113900218931[4] = 0;
   out_9061354113900218931[5] = 0;
   out_9061354113900218931[6] = 0;
   out_9061354113900218931[7] = 0;
   out_9061354113900218931[8] = 0;
   out_9061354113900218931[9] = 0;
   out_9061354113900218931[10] = 1;
   out_9061354113900218931[11] = 0;
   out_9061354113900218931[12] = 0;
   out_9061354113900218931[13] = 0;
   out_9061354113900218931[14] = 0;
   out_9061354113900218931[15] = 0;
   out_9061354113900218931[16] = 0;
   out_9061354113900218931[17] = 0;
   out_9061354113900218931[18] = 0;
   out_9061354113900218931[19] = 0;
   out_9061354113900218931[20] = 0;
   out_9061354113900218931[21] = 0;
   out_9061354113900218931[22] = 0;
   out_9061354113900218931[23] = 0;
   out_9061354113900218931[24] = 0;
   out_9061354113900218931[25] = 0;
   out_9061354113900218931[26] = 0;
   out_9061354113900218931[27] = 0;
   out_9061354113900218931[28] = 0;
   out_9061354113900218931[29] = 0;
   out_9061354113900218931[30] = 0;
   out_9061354113900218931[31] = 0;
   out_9061354113900218931[32] = 0;
   out_9061354113900218931[33] = 1;
   out_9061354113900218931[34] = 0;
   out_9061354113900218931[35] = 0;
   out_9061354113900218931[36] = 0;
   out_9061354113900218931[37] = 0;
   out_9061354113900218931[38] = 0;
   out_9061354113900218931[39] = 0;
   out_9061354113900218931[40] = 0;
   out_9061354113900218931[41] = 0;
   out_9061354113900218931[42] = 0;
   out_9061354113900218931[43] = 0;
   out_9061354113900218931[44] = 0;
   out_9061354113900218931[45] = 0;
   out_9061354113900218931[46] = 0;
   out_9061354113900218931[47] = 0;
   out_9061354113900218931[48] = 0;
   out_9061354113900218931[49] = 0;
   out_9061354113900218931[50] = 0;
   out_9061354113900218931[51] = 0;
   out_9061354113900218931[52] = 0;
   out_9061354113900218931[53] = 0;
   out_9061354113900218931[54] = 0;
   out_9061354113900218931[55] = 0;
   out_9061354113900218931[56] = 1;
   out_9061354113900218931[57] = 0;
   out_9061354113900218931[58] = 0;
   out_9061354113900218931[59] = 0;
   out_9061354113900218931[60] = 0;
   out_9061354113900218931[61] = 0;
   out_9061354113900218931[62] = 0;
   out_9061354113900218931[63] = 0;
   out_9061354113900218931[64] = 0;
   out_9061354113900218931[65] = 0;
}
void h_33(double *state, double *unused, double *out_3675521570661779962) {
   out_3675521570661779962[0] = state[16];
   out_3675521570661779962[1] = state[17];
   out_3675521570661779962[2] = state[18];
}
void H_33(double *state, double *unused, double *out_1613032684466023532) {
   out_1613032684466023532[0] = 0;
   out_1613032684466023532[1] = 0;
   out_1613032684466023532[2] = 0;
   out_1613032684466023532[3] = 0;
   out_1613032684466023532[4] = 0;
   out_1613032684466023532[5] = 0;
   out_1613032684466023532[6] = 0;
   out_1613032684466023532[7] = 0;
   out_1613032684466023532[8] = 0;
   out_1613032684466023532[9] = 0;
   out_1613032684466023532[10] = 0;
   out_1613032684466023532[11] = 0;
   out_1613032684466023532[12] = 0;
   out_1613032684466023532[13] = 0;
   out_1613032684466023532[14] = 0;
   out_1613032684466023532[15] = 0;
   out_1613032684466023532[16] = 1;
   out_1613032684466023532[17] = 0;
   out_1613032684466023532[18] = 0;
   out_1613032684466023532[19] = 0;
   out_1613032684466023532[20] = 0;
   out_1613032684466023532[21] = 0;
   out_1613032684466023532[22] = 0;
   out_1613032684466023532[23] = 0;
   out_1613032684466023532[24] = 0;
   out_1613032684466023532[25] = 0;
   out_1613032684466023532[26] = 0;
   out_1613032684466023532[27] = 0;
   out_1613032684466023532[28] = 0;
   out_1613032684466023532[29] = 0;
   out_1613032684466023532[30] = 0;
   out_1613032684466023532[31] = 0;
   out_1613032684466023532[32] = 0;
   out_1613032684466023532[33] = 0;
   out_1613032684466023532[34] = 0;
   out_1613032684466023532[35] = 0;
   out_1613032684466023532[36] = 0;
   out_1613032684466023532[37] = 0;
   out_1613032684466023532[38] = 0;
   out_1613032684466023532[39] = 1;
   out_1613032684466023532[40] = 0;
   out_1613032684466023532[41] = 0;
   out_1613032684466023532[42] = 0;
   out_1613032684466023532[43] = 0;
   out_1613032684466023532[44] = 0;
   out_1613032684466023532[45] = 0;
   out_1613032684466023532[46] = 0;
   out_1613032684466023532[47] = 0;
   out_1613032684466023532[48] = 0;
   out_1613032684466023532[49] = 0;
   out_1613032684466023532[50] = 0;
   out_1613032684466023532[51] = 0;
   out_1613032684466023532[52] = 0;
   out_1613032684466023532[53] = 0;
   out_1613032684466023532[54] = 0;
   out_1613032684466023532[55] = 0;
   out_1613032684466023532[56] = 0;
   out_1613032684466023532[57] = 0;
   out_1613032684466023532[58] = 0;
   out_1613032684466023532[59] = 0;
   out_1613032684466023532[60] = 0;
   out_1613032684466023532[61] = 0;
   out_1613032684466023532[62] = 1;
   out_1613032684466023532[63] = 0;
   out_1613032684466023532[64] = 0;
   out_1613032684466023532[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_5866002633423505928) {
  H(in_vec, out_5866002633423505928);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_8354761777587577496) {
  err_fun(nom_x, delta_x, out_8354761777587577496);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_8317700417448784408) {
  inv_err_fun(nom_x, true_x, out_8317700417448784408);
}
void live_H_mod_fun(double *state, double *out_4964267863056697179) {
  H_mod_fun(state, out_4964267863056697179);
}
void live_f_fun(double *state, double dt, double *out_1405658321643130987) {
  f_fun(state,  dt, out_1405658321643130987);
}
void live_F_fun(double *state, double dt, double *out_6609914163391936085) {
  F_fun(state,  dt, out_6609914163391936085);
}
void live_h_4(double *state, double *unused, double *out_6011813983550882776) {
  h_4(state, unused, out_6011813983550882776);
}
void live_H_4(double *state, double *unused, double *out_2098171024544885215) {
  H_4(state, unused, out_2098171024544885215);
}
void live_h_9(double *state, double *unused, double *out_3902237370978173728) {
  h_9(state, unused, out_3902237370978173728);
}
void live_H_9(double *state, double *unused, double *out_9061354113900218931) {
  H_9(state, unused, out_9061354113900218931);
}
void live_h_10(double *state, double *unused, double *out_8822121513169463888) {
  h_10(state, unused, out_8822121513169463888);
}
void live_H_10(double *state, double *unused, double *out_5660519162938753925) {
  H_10(state, unused, out_5660519162938753925);
}
void live_h_12(double *state, double *unused, double *out_9198692797862017000) {
  h_12(state, unused, out_9198692797862017000);
}
void live_H_12(double *state, double *unused, double *out_4283087352497847781) {
  H_12(state, unused, out_4283087352497847781);
}
void live_h_31(double *state, double *unused, double *out_4675503687168181330) {
  h_31(state, unused, out_4675503687168181330);
}
void live_H_31(double *state, double *unused, double *out_1537524320172834072) {
  H_31(state, unused, out_1537524320172834072);
}
void live_h_32(double *state, double *unused, double *out_7047972252560525334) {
  h_32(state, unused, out_7047972252560525334);
}
void live_H_32(double *state, double *unused, double *out_4263780052034778486) {
  H_32(state, unused, out_4263780052034778486);
}
void live_h_13(double *state, double *unused, double *out_3252000326958521153) {
  h_13(state, unused, out_3252000326958521153);
}
void live_H_13(double *state, double *unused, double *out_5915097730122734872) {
  H_13(state, unused, out_5915097730122734872);
}
void live_h_14(double *state, double *unused, double *out_3902237370978173728) {
  h_14(state, unused, out_3902237370978173728);
}
void live_H_14(double *state, double *unused, double *out_9061354113900218931) {
  H_14(state, unused, out_9061354113900218931);
}
void live_h_33(double *state, double *unused, double *out_3675521570661779962) {
  h_33(state, unused, out_3675521570661779962);
}
void live_H_33(double *state, double *unused, double *out_1613032684466023532) {
  H_33(state, unused, out_1613032684466023532);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
